interface Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
}

type MiscItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
}

interface WeaponRange {
  kind: String!
  normal: Int!
}

type WeaponRangeMelee implements WeaponRange {
  kind: String!
  normal: Int!
}

type WeaponRangeRanged implements WeaponRange {
  kind: String!
  normal: Int!
  long: Int!
}

interface WeaponProperty {
  kind: String!
}

type WeaponThrownRange {
    normal: Int!
    long: Int!
}

type WeaponPropertyAmmunition implements WeaponProperty {
  kind: String!
  ammunition: String!
}

type WeaponPropertyThrown implements WeaponProperty {
  kind: String!
  thrownRange: WeaponThrownRange
}

type WeaponPropertyTwoHanded implements WeaponProperty {
  kind: String!
  unlessMounted: Boolean!
}

type WeaponPropertyVersatile implements WeaponProperty {
  kind: String!
  twoHandedDamage: String!
}

type WeaponPropertyOther implements WeaponProperty {
  kind: String!
}

type WeaponItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  category: String!
  range: WeaponRange!
  properties: [WeaponProperty!]!
  damage: Damage!
}

interface ArmorArmorClass {
  kind: String!
}

type ArmorArmorClassSet implements ArmorArmorClass {
  kind: String!
  base: Int!
}

type ArmorArmorClassCompute implements ArmorArmorClass {
  kind: String!
  base: Int!
  modifier: AbilityScore!
  maxModifier: Int
}

type ArmorArmorClassAdd implements ArmorArmorClass {
  kind: String!
  bonus: Int!
}

type ArmorItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  category: String!
  armorClass: ArmorArmorClass!
  strengthRequirement: Int
  stealthDisadvantage: Boolean!
}

enum ToolsKind {
  artisans
  other
}

type ToolUse {
  desc: String!
  dc: Int!
}

type ToolsItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  toolsKind: ToolsKind!
  ability: AbilityScore!
  uses: [ToolUse!]!
  craftables: [Item!]!
}

type GearItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  desc: String!
}

type StackItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  item: Item!
  quantity: Int!
}

type ItemWithQuantity {
  item: Item!
  quantity: Int!
}

type PackItem implements Item {
  id: String!
  name: String!
  kind: String!
  cost: Cost!
  weight: Float!
  tags: [String!]!
  source: Source!
  contents: [ItemWithQuantity!]!
}

extend type Query {
  items: [Item]
  item(id: String!, expressions: Boolean): Item
}
